---
import { Index } from "../__registry__/index";
import CodeBlock from "./CodeBlock.astro";

const { name, meta } = Astro.props;

const entry = Index[name];

let DynamicComponent;
let codeSnippet;

try {
  const module = await entry.component();
  DynamicComponent = module.default;
  codeSnippet = entry.code;
} catch (err) {
  console.error(`El componente ${name} no pudo ser cargado:`, err);
}
---

<section
  class="slider-wrapper w-full h-auto relative bg-fg-secondary dark:bg-neutral-black overflow-hidden rounded-[15px] first-of-type:mb-0 mt-10 mb-10 grid grid-cols-[100%_100%] gap-3 border border-border dark:border-border-dark"
>
  <div
    class="notch-wrapper absolute top-[90%] w-full h-12 z-30 hover:cursor-grab active:cursor-grabbing"
  >
    <div
      class="notch h-[6px] w-[20%] bg-neutral-black dark:bg-neutral-white rounded-full absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2"
    >
    </div>
  </div>
  <div class="preview">
    <div class="preview-wrapper">
      <div class="component">
        {
          DynamicComponent ? (
            <DynamicComponent />
          ) : (
            <p>Error: No se pudo cargar el componente "{name}".</p>
          )
        }
      </div>
    </div>
  </div>
  <div class="code">
    <CodeBlock name={name} code={codeSnippet} meta={meta} />
  </div>
</section>

<script>
  import { initSlider } from "../utils/slider.ts";

  document
    .querySelectorAll<HTMLElement>(".slider-wrapper")
    .forEach((root) => initSlider(root));
</script>
